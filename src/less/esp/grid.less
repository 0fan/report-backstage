@col-length: 24;
@gutter-width: 10;
@gutter-step: 10;

.clr() {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
}
.esp-container {
  .make-container();
}
.esp-row {
  .make-row();
}
.make-col();
.make-gutter();
.make-container() {
  margin-right: auto;
  margin-left: auto;
  .clr();
}
.make-row() {
  .clr();
}
.make-col() {
  .col-base();
  .col-width();
  .col-push();
  .col-pull();
  .col-offset();
}
.col-base() {
  
  .col(@index) {
    @item: ~'.esp-col-@{index}';
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index <= @col-length) {
    @item: ~'.esp-col-@{index}';
    .col((@index + 1), ~'@{list}, @{item}');
  }
  .col(@index, @list) when (@index > @col-length) {
    @{list} {
      position: relative;
      min-height: 1px;
      box-sizing: border-box;
      float: left;
    }
  }
  .col(1);
}
.col-width(@index: @col-length) when (@index > 0) {
  .esp-col-@{index} {
    width: percentage(@index / @col-length);
  }
  .col-width((@index - 1));
}
.col-push(@index: @col-length) when (@index > 0) {
  .esp-col-push-@{index} {
    left: percentage(@index / @col-length);
  }
  .col-push((@index - 1));
}
.col-push(@index: @col-length) when (@index = 0) {
  .esp-col-push-0 {
    left: auto;
  }
  .col-push((@index - 1));
}
.col-pull(@index: @col-length) when (@index > 0) {
  .esp-col-pull-@{index} {
    right: percentage(@index / @col-length);
  }
  .col-pull((@index - 1));
}
.col-pull(@index: @col-length) when (@index = 0) {
  .esp-col-pull-0 {
    right: auto;
  }
  .col-pull((@index - 1));
}
.col-offset(@index: @col-length) when (@index >= 0) {
  .esp-col-offset-@{index} {
    margin-left: percentage(@index / @col-length);
  }
  .col-offset((@index - 1));
}
.make-gutter(@index:1) when (@index <= @gutter-step) {
  @_gutter: @index * @gutter-width;
  .esp-container.gutter-@{_gutter} {
    padding-right: ceil((@_gutter / 2) + 0px);
    padding-left: floor((@_gutter / 2) + 0px);
    .esp-row {
      margin-right: floor((@_gutter/ -2) + 0px);
      margin-left: ceil((@_gutter / -2) + 0px);
    }
  }
  .col(@_index) {
    @item: ~'.esp-container.gutter-@{_gutter} .esp-row > .esp-col-@{_index}';
    .col((@_index + 1), @item);
  }
  .col(@_index, @list) when (@_index <= @col-length) {
    @item: ~'.esp-container.gutter-@{_gutter} .esp-row > .esp-col-@{_index}';
    .col((@_index + 1), ~'@{list}, @{item}');
  }
  .col(@_index, @list) when (@_index > @col-length) {
    @{list} {
      padding-right: @_gutter / 2 + 0px;
      padding-left: @_gutter / 2 + 0px;
    }
  }
  .col(1);
  .make-gutter((@index + 1));
}
